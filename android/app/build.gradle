apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: "jacoco"

apply plugin: 'project-report'

apply from: "../../node_modules/react-native/react.gradle"


android {

    signingConfigs {
        config {
            keyAlias 'mixcloud'
            keyPassword 'mixcloud'
            storeFile file('/home/marcus/mixcloud/mixcloud.jks')
            storePassword 'mixcloud'
        }
    }
    compileSdkVersion 25
    buildToolsVersion '23.0.1'
    dataBinding {
        enabled = true
    }

    defaultConfig {
        applicationId "com.example.mixcloud"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true

    }
    buildTypes {
        mock {
            debuggable true
            signingConfig signingConfigs.config
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.facebook.react:react-native:+'
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:design:25.3.1'
    compile 'com.google.auto.value:auto-value:1.2'
    annotationProcessor "com.google.auto.value:auto-value:1.2"
    compile 'com.google.dagger:dagger-android:2.11'
    compile 'com.google.dagger:dagger-android-support:2.11'
    // if you use the support libraries
    annotationProcessor 'com.google.dagger:dagger-android-processor:2.11'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.11'
    compile 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.2.0'
    compile 'io.reactivex:rxandroid:1.0.1'
    compile 'com.google.code.gson:gson:2.8.2'
    compile('com.squareup.retrofit2:converter-gson:2.3.0') {
        exclude group: 'com.google.code.gson', module: 'gson'
    }
    annotationProcessor 'com.ryanharter.auto.value:auto-value-moshi:0.4.4'
    provided 'com.ryanharter.auto.value:auto-value-moshi-annotations:0.4.4'
    compile 'com.squareup.moshi:moshi:1.5.0'
    compile 'com.squareup.retrofit2:converter-moshi:2.3.0'
    annotationProcessor 'com.ryanharter.auto.value:auto-value-parcel:0.2.6'
    compile 'com.jakewharton.timber:timber:4.5.1'
    compile 'com.squareup.okhttp3:okhttp:3.8.1'
    compile 'com.squareup.picasso:picasso:2.5.2'

    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.8.9'
    testCompile 'org.powermock:powermock-core:1.7.3'
    testCompile 'org.powermock:powermock-api-mockito2:1.7.3'
    testCompile 'org.powermock:powermock-module-junit4:1.7.3'
    testCompile 'org.robolectric:robolectric:3.6.1'
    testCompile 'org.assertj:assertj-core:1.7.0'
}